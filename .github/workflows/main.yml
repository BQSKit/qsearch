name: run tests

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev
jobs:
  build:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.python-version == 3.9 }}
    strategy:
      matrix:
        python-version: [3.7,3.8,3.9]
        os: [macos-latest, ubuntu-latest, windows-latest]
      fail-fast: false
    steps:
        - name: checkout
          uses: actions/checkout@v2
          with:
            submodules: true
        - name: setup python
          uses: actions/setup-python@v1
          with:
            python-version: ${{ matrix.python-version }}
        - uses: actions/cache@v2
          if: startsWith(runner.os, 'Linux')
          with:
            path: ~/.cache/pip
            key: ${{ runner.os }}-pip2-${{ hashFiles('**/requirements.txt') }}
            restore-keys: |
              ${{ runner.os }}-pip-
        - uses: actions/cache@v2
          if: startsWith(runner.os, 'macOS')
          with:
            path: ~/Library/Caches/pip
            key: ${{ runner.os }}-pip2-${{ hashFiles('**/requirements.txt') }}
            restore-keys: |
              ${{ runner.os }}-pip-
        - uses: actions/cache@v2
          if: startsWith(runner.os, 'Windows')
          with:
            path: ~\AppData\Local\pip\Cache
            key: ${{ runner.os }}-pip2-${{ hashFiles('**/requirements.txt') }}
            restore-keys: |
              ${{ runner.os }}-pip-
        - uses: actions/cache@v2
          with:
            path: |
              ~/.cargo/registry
              ~/.cargo/git
              qsrs/target
            key: ${{ runner.os }}-cargo2-${{ hashFiles('**/Cargo.lock') }}
        - uses: actions/cache@v2
          if: startsWith(matrix.os, 'Windows')
          with:
            path: |
              qsrs/target/vcpkg
            key: ${{ runner.os }}-cargo2-${{ hashFiles('**/Cargo.toml') }}
        - name: Install nightly-2021-04-13
          uses: actions-rs/toolchain@v1
          with:
              toolchain: nightly-2021-04-13
              default: true
        - if: startsWith(matrix.os, 'ubuntu')
          run: sudo apt install libopenblas-dev libgfortran-7-dev libceres-dev
        - if: startsWith(matrix.os, 'macOS')
          run: brew install ceres-solver eigen
        - if: startsWith(matrix.os, 'Windows')
          run: cargo install cargo-vcpkg && cd qsrs && cargo vcpkg -v build
        - name: install test dependencies
          run: pip install -r test-requirements.txt
        - name: Build macOS wheels
          run: cd qsrs && pip install maturin && maturin build --cargo-extra-args="--no-default-features --features python,accelerate,rustopt" --release --no-sdist && pip install --no-index --find-links=target/wheels qsrs
          env:
            RUST_BACKTRACE: 1
          if: startsWith(matrix.os, 'macOS')
        - name: Build Windows wheels
          run: cd qsrs && pip install maturin && maturin build --cargo-extra-args="--no-default-features --features python,static,rustopt,openblas-src/system,squaremat/openblas-system" --release --no-sdist && pip install --no-index --find-links=target/wheels qsrs
          env:
            RUST_BACKTRACE: 1
          if: startsWith(matrix.os, 'Windows')
        - name: Build Linux wheel
          run: cd qsrs && pip install .
          env:
            RUST_BACKTRACE: 1
          if: startsWith(matrix.os, 'ubuntu')
        - name: install qsearch
          run: pip install . && pip install twine wheel
        - name: run pytest
          run: pytest
          if: "!contains(github.event.head_commit.message, '[qsrs pypi]')"
        - name: Remove target/ to prepare for building manylinux wheels
          run: cd qsrs && rm -rf target
          if: startsWith(matrix.os, 'ubuntu')
        - name: Build manylinux wheels
          run: cd qsrs && docker run -e OPENBLAS_ARGS="DYNAMIC_ARCH=1" --rm -v $(pwd):/io ethanhs/maturin-manylinux-2014:0.1 build --cargo-extra-args="--no-default-features --features python,static,rustopt,openblas-src/static,squaremat/openblas-static" --release --manylinux 2014 --no-sdist
          env:
            RUST_BACKTRACE: 1
          if: startsWith(matrix.os, 'ubuntu') && matrix.python-version == 3.7
        - name: upload wheel artifacts
          uses: actions/upload-artifact@v1
          with:
            name: qsrs-wheels-${{matrix.os}}-${{matrix.python-version}}
            path: qsrs/target/wheels
          if: startsWith(matrix.os, 'macOS') || matrix.python-version == 3.7
        - name: Publish qsrs to PyPI
          env:
            TWINE_USERNAME: __token__
            TWINE_PASSWORD: ${{ secrets.pypi_password }}
          run: twine upload qsrs/target/wheels/*
          if: contains(github.event.head_commit.message, '[qsrs pypi]') && !((matrix.python-version == 3.6 || matrix.python-version == 3.8 || matrix.python_version == 3.9) && startsWith(matrix.os, 'ubuntu'))
          with:
            skip_existing: true
        - name: Remove target/wheels to clear some space
          run: cd qsrs && rm -rf target/wheels
          if: (startsWith(matrix.os, 'macOS') || startsWith(matrix.os, 'ubuntu')) && matrix.python-version != 3.7
        - name: Remove target/wheels to clear some space
          run: cd qsrs && rmdir /s /q target\vcpkg
          shell: cmd
          if: startsWith(matrix.os, 'Windows')
