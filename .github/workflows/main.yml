name: run tests

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.6,3.7,3.8]
        os: [macOS-latest, ubuntu-latest]
      fail-fast: false
    steps:
        - name: checkout
          uses: actions/checkout@v2
        - name: setup python
          uses: actions/setup-python@v1
          with:
            python-version: ${{ matrix.python-version }}
        - uses: actions/cache@v2
          if: startsWith(runner.os, 'Linux')
          with:
            path: ~/.cache/pip
            key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
            restore-keys: |
              ${{ runner.os }}-pip-
        - uses: actions/cache@v2
          if: startsWith(runner.os, 'macOS')
          with:
            path: ~/Library/Caches/pip
            key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
            restore-keys: |
              ${{ runner.os }}-pip-
        - uses: actions/cache@v2
          if: startsWith(runner.os, 'Windows')
          with:
            path: ~\AppData\Local\pip\Cache
            key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
            restore-keys: |
              ${{ runner.os }}-pip-
        - uses: actions/cache@v2
          with:
            path: |
              ~/.cargo/registry
              ~/.cargo/git
              qsrs/target
            key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        - uses: actions/cache@v2
          if: startsWith(matrix.os, 'Windows')
          with:
            path: |
              qsrs/target/vcpkg
            key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
        - name: Install nightly-2020-04-06
          uses: actions-rs/toolchain@v1
          with:
              toolchain: nightly-2020-04-06
              default: true
        - if: startsWith(matrix.os, 'ubuntu')
          run: sudo apt install libopenblas-dev libgfortran-7-dev libceres-dev
        - if: startsWith(matrix.os, 'macOS')
          run: brew install ceres-solver eigen
        - if: startsWith(matrix.os, 'Windows')
          run: cargo install cargo-vcpkg && cd qsrs && cargo vcpkg -v build
        - name: install qsrs
          run: cd qsrs && pip install . && cd ..
        - name: install qsearch
          run: pip install .
        - name: install test dependencies
          run: pip install -r test-requirements.txt
        - name: run pytest
          run: pytest
